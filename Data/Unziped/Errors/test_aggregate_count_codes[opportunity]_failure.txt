#########################Automated tests trace#########################

self = <Tests.InitialPopulation.RelatedEntityCounts.test_aggregate_counts.TestAggregatedEntityCounts instance at 0x0367AF08>
entity_with_aggregates = 'opportunity'

    @pytest.mark.xre_demo
    def test_aggregate_count_codes(self, entity_with_aggregates):
        entity_name = entity_with_aggregates
        genericentity = EntityBase(
            entity_name=entity_name
        )
        genericentity.authorization_token = self.authorization_token
        genericentity.base_url = self.env_config.get_path("MEGS", "url")
    
        #self.search_api = SearchAPI(self.env_config,entity_name)
        #self.search_api.set_authorization_token(self.authorization_token)
        self.search_api.entity_name = entity_name
    
        _isPass = True
        _error_message = ""
        checked_aggregate_type = []
        ids = []
        for aggregate_type in ["activity", "history", "note", "connection"]:
            #for aggregate_count in range(0,2):
            for _sg in ["==", ">"]:
                import pyes
                #script = "doc['aggregateCountCodes.{0}'].value > {1}".format(aggregate_type,aggregate_count)
                script = "doc['aggregateCountCodes.{0}'].value {1} 0".format(aggregate_type, _sg)
                f1 = pyes.filters.BoolFilter()
                f1.add_must(pyes.ScriptFilter(script))
                #q1 = pyes.TermQuery("_type", entity_name)
                q1 = pyes.TermQuery("_type", self.es_client.check_entity_mapping(entity_name))
                aggregate_query = pyes.FilteredQuery(q1, f1)
                try:
                    ids.append(
                        self.es_client.get_entities_by_query(
                            query=aggregate_query
                        )[0]
                    )
                except Exception, e:
                    self.logger.exception(e)
    
        sample_body = self.search_api.sample_request
        response_code, _search_api_response = self.search_api.send_search_request(request_body=sample_body, Size=1, Ids=ids)
        search_results = json.loads(_search_api_response)["Results"]
    
        for result in search_results:
            if type(result["aggregateCountCodes"]) == dict:
                if ["activity","history","note","connection"] in checked_aggregate_type:
                    break
                for _code_key in result["aggregateCountCodes"].keys():
                    general_entity_name = HTTPUrlMapping().get_entity_mapping(entity_name, type="general")
                    if result["aggregateCountCodes"][_code_key] > 0 and _code_key not in checked_aggregate_type:
                        _action = ""
                        if _code_key in ["activity", "history"]:
                            _action = "activities"
                            if _code_key == "activity":
                                _index_count = result["aggregateCountCodes"]["activity"]
                            else:
                                _index_count = result["aggregateCountCodes"]["history"]
                        else:
                            _index_count = result["aggregateCountCodes"][_code_key]
                            if _code_key == "connection":
                                _action = "connections"
                            else:
                                _action = "notes"
    
                        checked_aggregate_type.append(_code_key)
                        _test_entity_id = result["{0}id".format(entity_name)]
                        api_request = HTTPUrlMapping().get_api_url(
                            method="GET",
                            entity=general_entity_name,
                            id=_test_entity_id,
                            action=_action
                        )
                        if _code_key in ["activity", "history", "connection"]:
                            _megs_response1 = genericentity.get_entity(
                                params={
                                    "id": _test_entity_id,
                                    "action": _action
                                }
                            )[1]
                            _details_count = len(json.loads(_megs_response1)["Objects"])
                            if _code_key in ["activity", "history"]:
                                _get_request_results = json.loads(_megs_response1)["Objects"]
                                _history_count = 0
                                _activity_count = 0
                                for _obj in _get_request_results:
                                    if _obj["statecode"] in ["Canceled", "Completed"]:
                                        _history_count += 1
                                    else:
                                        _activity_count += 1
    
                                if _code_key == "activity":
                                    _details_count = _activity_count
                                else:
                                    _details_count = _history_count
    
                            elif _code_key in []:
                                _details_count = 0
    
                            self.logger.info("Verify aggregate counts for particular MEGS1 API request - {0}".format(
                                api_request))
                            if int(_index_count) != int(_details_count):
                                _isPass = False
                                _error_message = "Aggregate counts in Index not match to Cache for {0}, {1}".format(
                                    entity_name,
                                    result["{0}id".format(entity_name)])
                                self.logger.error(_error_message)
                                self.logger.error("Index {0} count : {1}".format(
                                    _code_key,
                                    _index_count))
                                self.logger.error("Cache {0} count : {1}".format(
                                    _code_key,
                                    _details_count))
    
                            self.logger.info("Verify aggregate counts in entity details - {0}".format(entity_name))
                            _megs_response2 = genericentity.get_entity(
                                params={
                                    "id": _test_entity_id,
                                    "request_params": "relationCalculationTimeout=-1"
                                }
                            )[1]
                            _entity_details = json.loads(_megs_response2)
                            if int(_index_count) != int(_entity_details["related_{0}".format(_code_key)]):
                                _isPass = False
                                _error_message = "Aggregate counts in Index not match to Cache for {0}, {1}".format(
                                    entity_name,
                                    result["{0}id".format(entity_name)])
                                self.logger.error(_error_message)
                                self.logger.error("Index {0} count : {1}".format(
                                    _code_key,
                                    _index_count))
                                self.logger.error("Cache (entity details) {0} count : {1}".format(
                                    _code_key,
                                    _entity_details["related_{0}".format(_code_key)]))
    
                        else:
                            self.logger.info("Verify aggregate counts in entity details - {0}".format(entity_name))
                            _megs_response3 = genericentity.get_entity(
                                params={
                                    "id": _test_entity_id,
                                    "request_params": "relationCalculationTimeout=-1"
                                }
                            )[1]
                            _entity_details = json.loads(_megs_response3)
                            if int(_index_count) != int(_entity_details["related_{0}".format(_code_key)]):
                                _isPass = False
                                _error_message = "Aggregate counts in Index not match to Cache for {0}, {1}".format(
                                    entity_name,
                                    result["{0}id".format(entity_name)])
                                self.logger.error(_error_message)
                                self.logger.error("Index {0} count : {1}".format(_code_key, _index_count))
                                self.logger.error("Cache {0} count : {1}".format(_code_key, _entity_details["related_{0}".format(_code_key)]))
    
            else:
                self.logger.error("Field 'aggregateCountCodes' has invalid type - {0}".format(type(result["aggregateCountCodes"])))
    
        if bool(_isPass):
            pass
        else:
>           raise Exception, "Aggregate counts in Index match to Cache"
E           Exception: Aggregate counts in Index match to Cache

C:\EdgeDeployment\FunctionalTests\src\Elasticsearch\Tests\InitialPopulation\RelatedEntityCounts\test_aggregate_counts.py:189: Exception
-------------------------------- Captured log ---------------------------------
requests_api.py             76 INFO     Sending HTTP request...
requests_api.py             83 DEBUG    Method type: GET
requests_api.py             94 DEBUG    Url: http://localhost/xre2113qa.nightly/api/authentication
requests_api.py             95 DEBUG    Headers: {'Authorization-Token': u'29a288488af74399a18e23236dad099b', 'Accept-Language': 'en-US,en;q=0.8', 'Content-Type': 'application/json', 'Accept-Encoding': 'deflate, gzip'}
connectionpool.py          176 INFO     Starting new HTTP connection (1): localhost
connectionpool.py          344 DEBUG    "GET /xre2113qa.nightly/api/authentication HTTP/1.1" 200 2124
requests_api.py            140 INFO     Response recieved...
requests_api.py            141 INFO     Response status: 200
requests_api.py            142 INFO     Response reason: OK
requests_api.py            143 INFO     Response time: 0:00:00.435000
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly.settings/ValueWithVersion%601/opportunity HTTP/1.1" 200 20477
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly/_search HTTP/1.1" 200 2853
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly.settings/ValueWithVersion%601/opportunity HTTP/1.1" 200 20477
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly/_search HTTP/1.1" 200 1936
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly.settings/ValueWithVersion%601/opportunity HTTP/1.1" 200 20477
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly/_search HTTP/1.1" 200 2854
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly.settings/ValueWithVersion%601/opportunity HTTP/1.1" 200 20477
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly/_search HTTP/1.1" 200 1232
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly.settings/ValueWithVersion%601/opportunity HTTP/1.1" 200 20477
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly/_search HTTP/1.1" 200 2854
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly.settings/ValueWithVersion%601/opportunity HTTP/1.1" 200 20477
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly/_search HTTP/1.1" 200 1491
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly.settings/ValueWithVersion%601/opportunity HTTP/1.1" 200 20477
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly/_search HTTP/1.1" 200 1482
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly.settings/ValueWithVersion%601/opportunity HTTP/1.1" 200 20477
connectionpool.py          296 DEBUG    "GET /xre2113qa.nightly/_search HTTP/1.1" 200 2853
requests_api.py             76 INFO     Sending HTTP request...
requests_api.py             83 DEBUG    Method type: POST
requests_api.py             94 DEBUG    Url: http://localhost/xre2113qa.nightly/api/search/opportunity
requests_api.py             95 DEBUG    Headers: {'Authorization-Token': u'29a288488af74399a18e23236dad099b', 'Accept-Language': 'en-US,en;q=0.8', 'Content-Type': 'application/json', 'Accept-Encoding': 'deflate, gzip'}
requests_api.py            104 DEBUG    Request body: {"ResultsFormat": null, "From": 0, "SelectedDateTimeFacets": null, "Relations": [], "PinTo": {"lat": -27.47018, "lon": 153.02911}, "NumericFacetFilters": [], "OrderBy": [{"Field": "_score", "IsDescending": "true"}], "GeoPolygonFilters": [], "TermFacetFilters": [], "FieldFilters": [], "GeoDistanceFacetFilters": [], "ScriptFilters": [], "Ids": [], "SelectedNumericFacets": null, "RelationCounts": [], "Options": null, "SelectedTermFacets": null, "DateTimeFacetFilters": [], "TermFacetSize": 25, "SelectedGeoFacets": null, "Query": "*", "Size": 25}
connectionpool.py          176 INFO     Starting new HTTP connection (1): localhost
connectionpool.py          344 DEBUG    "POST /xre2113qa.nightly/api/search/opportunity HTTP/1.1" 200 36830
requests_api.py            140 INFO     Response recieved...
requests_api.py            141 INFO     Response status: 200
requests_api.py            142 INFO     Response reason: OK
requests_api.py            143 INFO     Response time: 0:00:01.113000
EntityBase.py              132 INFO     Sending GET request..
requests_api.py             76 INFO     Sending HTTP request...
requests_api.py             83 DEBUG    Method type: GET
requests_api.py             94 DEBUG    Url: http://localhost/xre2113qa.nightly/api/opportunity/003db6db-c77e-e311-a5b4-00155d28de35/connections
requests_api.py             95 DEBUG    Headers: {'Authorization-Token': u'29a288488af74399a18e23236dad099b', 'Accept-Language': 'en-US,en;q=0.8', 'Content-Type': 'application/json', 'Accept-Encoding': 'deflate, gzip'}
connectionpool.py          176 INFO     Starting new HTTP connection (1): localhost
connectionpool.py          344 DEBUG    "GET /xre2113qa.nightly/api/opportunity/003db6db-c77e-e311-a5b4-00155d28de35/connections HTTP/1.1" 200 1792
requests_api.py            140 INFO     Response recieved...
requests_api.py            141 INFO     Response status: 200
requests_api.py            142 INFO     Response reason: OK
requests_api.py            143 INFO     Response time: 0:00:00.697000
test_aggregate_counts.py   130 INFO     Verify aggregate counts for particular MEGS1 API request - api/opportunity/003db6db-c77e-e311-a5b4-00155d28de35/connections
test_aggregate_counts.py   144 INFO     Verify aggregate counts in entity details - opportunity
EntityBase.py              132 INFO     Sending GET request..
requests_api.py             76 INFO     Sending HTTP request...
requests_api.py             83 DEBUG    Method type: GET
requests_api.py             94 DEBUG    Url: http://localhost/xre2113qa.nightly/api/opportunity/003db6db-c77e-e311-a5b4-00155d28de35/
requests_api.py             95 DEBUG    Headers: {'Authorization-Token': u'29a288488af74399a18e23236dad099b', 'Accept-Language': 'en-US,en;q=0.8', 'Content-Type': 'application/json', 'Accept-Encoding': 'deflate, gzip'}
requests_api.py            127 DEBUG    Request params: relationCalculationTimeout=-1
connectionpool.py          176 INFO     Starting new HTTP connection (1): localhost
connectionpool.py          344 DEBUG    "GET /xre2113qa.nightly/api/opportunity/003db6db-c77e-e311-a5b4-00155d28de35/?relationCalculationTimeout=-1 HTTP/1.1" 200 3577
requests_api.py            140 INFO     Response recieved...
requests_api.py            141 INFO     Response status: 200
requests_api.py            142 INFO     Response reason: OK
requests_api.py            143 INFO     Response time: 0:00:01.028000
EntityBase.py              132 INFO     Sending GET request..
requests_api.py             76 INFO     Sending HTTP request...
requests_api.py             83 DEBUG    Method type: GET
requests_api.py             94 DEBUG    Url: http://localhost/xre2113qa.nightly/api/opportunity/006a5588-8362-e311-9471-00155d280475/activities
requests_api.py             95 DEBUG    Headers: {'Authorization-Token': u'29a288488af74399a18e23236dad099b', 'Accept-Language': 'en-US,en;q=0.8', 'Content-Type': 'application/json', 'Accept-Encoding': 'deflate, gzip'}
connectionpool.py          176 INFO     Starting new HTTP connection (1): localhost
connectionpool.py          344 DEBUG    "GET /xre2113qa.nightly/api/opportunity/006a5588-8362-e311-9471-00155d280475/activities HTTP/1.1" 200 1608
requests_api.py            140 INFO     Response recieved...
requests_api.py            141 INFO     Response status: 200
requests_api.py            142 INFO     Response reason: OK
requests_api.py            143 INFO     Response time: 0:00:00.751000
test_aggregate_counts.py   130 INFO     Verify aggregate counts for particular MEGS1 API request - api/opportunity/006a5588-8362-e311-9471-00155d280475/activities
test_aggregate_counts.py   144 INFO     Verify aggregate counts in entity details - opportunity
EntityBase.py              132 INFO     Sending GET request..
requests_api.py             76 INFO     Sending HTTP request...
requests_api.py             83 DEBUG    Method type: GET
requests_api.py             94 DEBUG    Url: http://localhost/xre2113qa.nightly/api/opportunity/006a5588-8362-e311-9471-00155d280475/
requests_api.py             95 DEBUG    Headers: {'Authorization-Token': u'29a288488af74399a18e23236dad099b', 'Accept-Language': 'en-US,en;q=0.8', 'Content-Type': 'application/json', 'Accept-Encoding': 'deflate, gzip'}
requests_api.py            127 DEBUG    Request params: relationCalculationTimeout=-1
connectionpool.py          176 INFO     Starting new HTTP connection (1): localhost
connectionpool.py          344 DEBUG    "GET /xre2113qa.nightly/api/opportunity/006a5588-8362-e311-9471-00155d280475/?relationCalculationTimeout=-1 HTTP/1.1" 200 3396
requests_api.py            140 INFO     Response recieved...
requests_api.py            141 INFO     Response status: 200
requests_api.py            142 INFO     Response reason: OK
requests_api.py            143 INFO     Response time: 0:00:04.693000
test_aggregate_counts.py   166 INFO     Verify aggregate counts in entity details - opportunity
EntityBase.py              132 INFO     Sending GET request..
requests_api.py             76 INFO     Sending HTTP request...
requests_api.py             83 DEBUG    Method type: GET
requests_api.py             94 DEBUG    Url: http://localhost/xre2113qa.nightly/api/opportunity/01cfaf5c-d973-e311-bb29-00155d280475/
requests_api.py             95 DEBUG    Headers: {'Authorization-Token': u'29a288488af74399a18e23236dad099b', 'Accept-Language': 'en-US,en;q=0.8', 'Content-Type': 'application/json', 'Accept-Encoding': 'deflate, gzip'}
requests_api.py            127 DEBUG    Request params: relationCalculationTimeout=-1
connectionpool.py          176 INFO     Starting new HTTP connection (1): localhost
connectionpool.py          344 DEBUG    "GET /xre2113qa.nightly/api/opportunity/01cfaf5c-d973-e311-bb29-00155d280475/?relationCalculationTimeout=-1 HTTP/1.1" 200 3308
requests_api.py            140 INFO     Response recieved...
requests_api.py            141 INFO     Response status: 200
requests_api.py            142 INFO     Response reason: OK
requests_api.py            143 INFO     Response time: 0:00:01.656000
test_aggregate_counts.py   179 ERROR    Aggregate counts in Index not match to Cache for opportunity, 01cfaf5c-d973-e311-bb29-00155d280475
test_aggregate_counts.py   180 ERROR    Index note count : 1
test_aggregate_counts.py   181 ERROR    Cache note count : 0
EntityBase.py              132 INFO     Sending GET request..
requests_api.py             76 INFO     Sending HTTP request...
requests_api.py             83 DEBUG    Method type: GET
requests_api.py             94 DEBUG    Url: http://localhost/xre2113qa.nightly/api/opportunity/0a2152f9-1d7e-e311-9241-00155d28de35/activities
requests_api.py             95 DEBUG    Headers: {'Authorization-Token': u'29a288488af74399a18e23236dad099b', 'Accept-Language': 'en-US,en;q=0.8', 'Content-Type': 'application/json', 'Accept-Encoding': 'deflate, gzip'}
connectionpool.py          176 INFO     Starting new HTTP connection (1): localhost
connectionpool.py          344 DEBUG    "GET /xre2113qa.nightly/api/opportunity/0a2152f9-1d7e-e311-9241-00155d28de35/activities HTTP/1.1" 200 4211
requests_api.py            140 INFO     Response recieved...
requests_api.py            141 INFO     Response status: 200
requests_api.py            142 INFO     Response reason: OK
requests_api.py            143 INFO     Response time: 0:00:00.835000
test_aggregate_counts.py   130 INFO     Verify aggregate counts for particular MEGS1 API request - api/opportunity/0a2152f9-1d7e-e311-9241-00155d28de35/activities
test_aggregate_counts.py   144 INFO     Verify aggregate counts in entity details - opportunity
EntityBase.py              132 INFO     Sending GET request..
requests_api.py             76 INFO     Sending HTTP request...
requests_api.py             83 DEBUG    Method type: GET
requests_api.py             94 DEBUG    Url: http://localhost/xre2113qa.nightly/api/opportunity/0a2152f9-1d7e-e311-9241-00155d28de35/
requests_api.py             95 DEBUG    Headers: {'Authorization-Token': u'29a288488af74399a18e23236dad099b', 'Accept-Language': 'en-US,en;q=0.8', 'Content-Type': 'application/json', 'Accept-Encoding': 'deflate, gzip'}
requests_api.py            127 DEBUG    Request params: relationCalculationTimeout=-1
connectionpool.py          176 INFO     Starting new HTTP connection (1): localhost
connectionpool.py          344 DEBUG    "GET /xre2113qa.nightly/api/opportunity/0a2152f9-1d7e-e311-9241-00155d28de35/?relationCalculationTimeout=-1 HTTP/1.1" 200 3572
requests_api.py            140 INFO     Response recieved...
requests_api.py            141 INFO     Response status: 200
requests_api.py            142 INFO     Response reason: OK
requests_api.py            143 INFO     Response time: 0:00:01.737000
#########################Server error trace#########################
{"index":[],"megs":[{"TimeStamp":"2014-02-18T08:54:06.94918Z","Message":"Could not get the value of required parameter 'crm_account_id'","ErrorLevel":"WARN","Longdate":"2014-02-18 02:54:00.7943","ThreadId":"77 ","Logger":"AscendixRE.InsideView.Implementation.Requests.InsideViewRequestUtils","Exception":""},{"TimeStamp":"2014-02-18T08:54:06.9892165Z","Message":"Could not get the value of required parameter 'crm_account_id'","ErrorLevel":"WARN","Longdate":"2014-02-18 02:54:02.4172","ThreadId":"54 ","Logger":"AscendixRE.InsideView.Implementation.Requests.InsideViewRequestUtils","Exception":""},{"TimeStamp":"2014-02-18T08:54:07.2001405Z","Message":"Could not get the value of required parameter 'crm_account_id'","ErrorLevel":"WARN","Longdate":"2014-02-18 02:54:05.0489","ThreadId":"77 ","Logger":"AscendixRE.InsideView.Implementation.Requests.InsideViewRequestUtils","Exception":""},{"TimeStamp":"2014-02-18T08:54:07.324156Z","Message":"Could not get the value of required parameter 'crm_fn'","ErrorLevel":"WARN","Longdate":"2014-02-18 02:54:06.5019","ThreadId":"82 ","Logger":"AscendixRE.InsideView.Implementation.Requests.InsideViewRequestUtils","Exception":""},{"TimeStamp":"2014-02-18T08:54:07.3485685Z","Message":"Could not get the value of required parameter 'crm_email'","ErrorLevel":"WARN","Longdate":"2014-02-18 02:54:06.5019","ThreadId":"82 ","Logger":"AscendixRE.InsideView.Implementation.Requests.InsideViewRequestUtils","Exception":""},{"TimeStamp":"2014-02-18T08:54:07.361263Z","Message":"Could not get the value of required parameter 'crm_account_id'","ErrorLevel":"WARN","Longdate":"2014-02-18 02:54:06.5019","ThreadId":"82 ","Logger":"AscendixRE.InsideView.Implementation.Requests.InsideViewRequestUtils","Exception":""},{"TimeStamp":"2014-02-18T08:54:07.3817695Z","Message":"Could not get the value of required parameter 'crm_account_name'","ErrorLevel":"WARN","Longdate":"2014-02-18 02:54:06.5019","ThreadId":"82 ","Logger":"AscendixRE.InsideView.Implementation.Requests.InsideViewRequestUtils","Exception":""},{"TimeStamp":"2014-02-18T08:54:08.009659Z","Message":"Could not get the value of required parameter 'crm_fn'","ErrorLevel":"WARN","Longdate":"2014-02-18 02:54:07.9754","ThreadId":"97 ","Logger":"AscendixRE.InsideView.Implementation.Requests.InsideViewRequestUtils","Exception":""},{"TimeStamp":"2014-02-18T08:54:08.0477425Z","Message":"Could not get the value of required parameter 'crm_email'","ErrorLevel":"WARN","Longdate":"2014-02-18 02:54:07.9754","ThreadId":"97 ","Logger":"AscendixRE.InsideView.Implementation.Requests.InsideViewRequestUtils","Exception":""},{"TimeStamp":"2014-02-18T08:54:08.0848495Z","Message":"Could not get the value of required parameter 'crm_account_id'","ErrorLevel":"WARN","Longdate":"2014-02-18 02:54:07.9754","ThreadId":"97 ","Logger":"AscendixRE.InsideView.Implementation.Requests.InsideViewRequestUtils","Exception":""},{"TimeStamp":"2014-02-18T08:54:08.142463Z","Message":"Could not get the value of required parameter 'crm_account_name'","ErrorLevel":"WARN","Longdate":"2014-02-18 02:54:07.9754","ThreadId":"97 ","Logger":"AscendixRE.InsideView.Implementation.Requests.InsideViewRequestUtils","Exception":""}]}
